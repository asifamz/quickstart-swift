{
  "AWSTemplateFormatVersion": "2010-09-09",

  "Description": "QS(5004)  Create an EC2 Instance with a local development environment for Swift pre-installed. Contains a Docker configuration to allow easy deployment to Amazon ECS.",

  "Parameters": {
    "KeyName": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription": "Must be the name of an existing EC2 KeyPair.",
      "MinLength": 1
    },
    "KeyPairPath": {
      "Description": "Path to the local .pem file named in KeyName",
      "Type": "String",
      "MinLength": 1
    },
    "InstanceType": {
      "Description": "WebServer EC2 instance type",
      "Type": "String",
      "Default": "t2.small",
      "AllowedValues": ["t1.micro", "t2.nano", "t2.micro", "t2.small", "t2.medium", "t2.large", "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge", "c1.medium", "c1.xlarge", "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge", "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge", "g2.2xlarge", "g2.8xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge", "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge", "hi1.4xlarge", "hs1.8xlarge", "cr1.8xlarge", "cc2.8xlarge", "cg1.4xlarge"],
      "ConstraintDescription": "must be a valid EC2 instance type."
    },
    "SSHLocation": {
      "Description": "The IP address range that can be used to SSH to the EC2 instances Note a value of 0.0.0.0/O will allow access from ANYWARE",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    }
  },

  "Resources": {
    "BastionInstance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "IamInstanceProfile": {
          "Ref": "BastionInstanceProfile"
        },
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "SecurityGroups": [{
          "Ref": "BastionInstanceSecurityGroup"
        }],
        "KeyName": {
          "Ref": "KeyName"
        },
        "ImageId": "ami-13ee8c04",
        "Tags": [
          { 
            "Key": "Name",
            "Value": {
              "Fn::Join": ["", [{"Ref": "AWS::StackName"},"-bastion" ]]
            }
          }
        ]
      }
    },

    "BastionInstanceSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enable SSH access via port 22",
        "SecurityGroupIngress": [{
          "IpProtocol": "tcp",
          "FromPort": "22",
          "ToPort": "22",
          "CidrIp": {
            "Ref": "SSHLocation"
          }
        }]
      }
    },

    "BastionInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [{"Ref": "BastionInstanceRole"}]
      }
    },

    "BastionInstanceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [{
            "Effect": "Allow",
            "Principal": {
              "Service": ["ec2.amazonaws.com"]
            },
            "Action": ["sts:AssumeRole"]
          }]
        },
        "Policies": [{
          "PolicyName": "codecommit",
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [{
              "Effect": "Allow",
              "Action": [
                "codecommit:*"
              ],
              "Resource": "*"
            }]
          }
        }, {
          "PolicyName": "ecr",
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [{
              "Effect": "Allow",
              "Action": [
                "ecr:*"
              ],
              "Resource": "*"
            }]
          }
        }]
      }
    },

    "ClusterInstance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "IamInstanceProfile": {
          "Ref": "ClusterInstanceProfile"
        },
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "SecurityGroups": [{
          "Ref": "ClusterInstanceSecurityGroup"
        }],
        "KeyName": {
          "Ref": "KeyName"
        },
        "ImageId": "ami-55870742",
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": ["", [{"Ref": "AWS::StackName"},"-cluster" ]]
            }
          }
        ],
        "UserData": { "Fn::Base64": { "Fn::Join": ["\n", [
          "#!/bin/bash",
          { "Fn::Join": ["", ["echo ECS_CLUSTER=", {"Ref": "ECSCluster"}, " >> /etc/ecs/ecs.config" ]]}
        ]]}}
      }
    },

    "ClusterInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [{"Ref": "ClusterInstanceRole"}]
      }
    },

    "ClusterInstanceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [{
            "Effect": "Allow",
            "Principal": {
              "Service": ["ec2.amazonaws.com"]
            },
            "Action": ["sts:AssumeRole"]
          }]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role"
        ],
        "Policies": [{
          "PolicyName": "ECRAccess",
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [{
              "Effect": "Allow",
              "Action": "ecr:*",
              "Resource": "*"
            }]
          }
        }]
      }
    },

    "ClusterInstanceSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enable SSH access via port 22",
        "SecurityGroupIngress": [{
          "IpProtocol": "tcp",
          "FromPort": "22",
          "ToPort": "22",
          "CidrIp": {
            "Ref": "SSHLocation"
          }
        }, {
          "IpProtocol": "tcp",
          "FromPort": "80",
          "ToPort": "80",
          "CidrIp": {
            "Ref": "SSHLocation"
          }
        }]
      }
    },

    "ECSRepository": {
      "Type" : "AWS::ECR::Repository",
      "Properties" : {
        "RepositoryName" : {
          "Fn::Join": ["", [{"Ref": "AWS::StackName"},"-repository" ]]
        }
      }
    },

    "ECSCluster": {
      "Type": "AWS::ECS::Cluster"
    }
  },

  "Outputs": {
    "BastionIp": {
      "Description": "Public IP address of the newly created EC2 instance",
      "Value": {
        "Fn::GetAtt": ["BastionInstance", "PublicIp"]
      }
    },
    "SSHToBastion": {
      "Description": "1. Unix command to SSH into the bastion instance",
      "Value": {
        "Fn::Join": ["", [
          "ssh -i ",
          { "Ref": "KeyPairPath" },
          " ubuntu@",
          { "Fn::GetAtt": ["BastionInstance", "PublicIp"] }
        ]]
      }
    },
    "ClusterIp": {
      "Description": "Public IP address of the ECS cluster instance",
      "Value": {
        "Fn::GetAtt": ["ClusterInstance", "PublicIp"]
      }
    },
    "TagPreBuiltImage": {
      "Description": "Tag the pre-built Docker image",
      "Value": {
        "Fn::Join": ["", [
          "docker tag swift-on-ecs-prebuilt:latest ",
          { "Fn::Join": ["", [
            { "Ref": "AWS::AccountId" },
            ".dkr.ecr.",
            { "Ref": "AWS::Region" },
            ".amazonaws.com/",
            { "Ref": "ECSRepository" }
          ]]},
          ":latest"
        ]]
      }
    },
    "PushPreBuiltImage": {
      "Description": "Push the pre-built Docker image to the ECS Repository",
      "Value": {
        "Fn::Join": ["", [
          "docker push ",
          { "Fn::Join": ["", [
            { "Ref": "AWS::AccountId" },
            ".dkr.ecr.",
            { "Ref": "AWS::Region" },
            ".amazonaws.com/",
            { "Ref": "ECSRepository" }
          ]]},
          ":latest"
        ]]
      }
    },
    "RepositoryURL": {
      "Description": "ECS Repository clone URL",
      "Value": {
        "Fn::Join": ["", [
          { "Ref": "AWS::AccountId" },
          ".dkr.ecr.",
          { "Ref": "AWS::Region" },
          ".amazonaws.com/",
          { "Ref": "ECSRepository" }
        ]]
      }
    }
  }
}
